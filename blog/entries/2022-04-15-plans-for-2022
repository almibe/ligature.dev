---
layout: main.liquid
title: Plans for 2022
tags: blog
date: 2022-04-25
---

# Plans for 2022

When I first started work on Ligature, I decided that I wanted to focus on the library aspect of the project.
So I'd make a bunch of reusable modules and then eventually use that to make applications with the libraries.
I've recently come to the conclusion that this probably isn't the best way to go about developing Ligature.
Focusing first libraries means the main audience is developers (honestly just me for now) and not end users.
It also makes the implementation language very important since different languages mix with others to a varying degree.
This leads to a lot of language churn (something this project has been very guilty of).

To address this issue I've decided to focus on writing Ligature first and foremost as an HTTP API server.
This makes Ligature focus more on the end user and makes it more of a black box at the same time.
Meaning I can just pick a stack I'm productive in and not worry about others using the code directly.
It also means that Ligature can be used from any language and also a wide set of tools that provide a generic interface to HTTP.

To focus on productivity I've decided to move to using Kotlin and Vert.x once again for my stack.
I'm by no means a speedy developer, but I can pretty much write Kotlin as fast as my brain and fingers can work.
Vert.x is still by far my favorite HTTP server/client library for any platform so it'll aid it getting stuff out quickly.
With the advent of GraalVM I can also make native releases that will make distribution easier.
I feel this will especially come in handy with the Tauri application I'm planning on writing since the server can be used as a sidecar.

I'm just now beginning work on this, so I plan on posting a bit more with updates and hope to start having releases by the middle of the year.
